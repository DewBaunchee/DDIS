package by.varyvoda.bankapp.domain.repository.impl

import by.varyvoda.bankapp.domain.dependency.DependencyProvider
import by.varyvoda.bankapp.domain.model.Client
import by.varyvoda.bankapp.domain.model.Sex
import by.varyvoda.bankapp.domain.repository.AbstractRepository
import by.varyvoda.bankapp.domain.repository.mapping.EntityMapping
import java.time.LocalDate

class ClientRepository : AbstractRepository<String, Client>(
    EntityMapping(
        "client",
        { Client() },
        DependencyProvider.get().run {
            val cityRep = provide(CityRepository::class.java)
            val maritalStatusRep = provide(MaritalStatusRepository::class.java)
            val countryRep = provide(CountryRepository::class.java)
            val disabilityRep = provide(DisabilityRepository::class.java)
            return@run listOf(
                EntityMapping.Field(
                    columnName = "last_name",
                    plainType = String::class.java,
                    false,
                    isAutogenerated = false,
                    getter = { lastName }
                ) { lastName = it!! },
                EntityMapping.Field(
                    columnName = "first_name",
                    plainType = String::class.java,
                    false,
                    isAutogenerated = false,
                    getter = { firstName }
                ) { firstName = it!! },
                EntityMapping.Field(
                    columnName = "patronymic",
                    plainType = String::class.java,
                    false,
                    isAutogenerated = false,
                    getter = { patronymic }
                ) { patronymic = it!! },
                EntityMapping.Field(
                    columnName = "birthday",
                    plainType = LocalDate::class.java,
                    false,
                    isAutogenerated = false,
                    getter = { birthday }
                ) { birthday = it!! },
                EntityMapping.Field(
                    columnName = "sex",
                    plainType = String::class.java,
                    false,
                    isAutogenerated = false,
                    getter = { sex.toString().lowercase() }
                ) { sex = Sex.valueOf(it!!.uppercase()) },
                EntityMapping.Field(
                    columnName = "passport_series",
                    plainType = String::class.java,
                    false,
                    isAutogenerated = false,
                    getter = { passportSeries }
                ) { passportSeries = it!! },
                EntityMapping.Field(
                    columnName = "passport_number",
                    plainType = String::class.java,
                    false,
                    isAutogenerated = false,
                    getter = { passportNumber }
                ) { passportNumber = it!! },
                EntityMapping.Field(
                    columnName = "produced_by",
                    plainType = String::class.java,
                    false,
                    isAutogenerated = false,
                    getter = { producedBy }
                ) { producedBy = it!! },
                EntityMapping.Field(
                    columnName = "producing_date",
                    plainType = LocalDate::class.java,
                    false,
                    isAutogenerated = false,
                    getter = { producingDate }
                ) { producingDate = it!! },
                EntityMapping.Field(
                    columnName = "id",
                    plainType = String::class.java,
                    true,
                    isAutogenerated = false,
                    getter = { id }
                ) { id = it!! },
                EntityMapping.Field(
                    columnName = "birthplace",
                    plainType = String::class.java,
                    false,
                    isAutogenerated = false,
                    getter = { birthplace }
                ) { birthplace = it!! },
                EntityMapping.Field(
                    columnName = "residence_city",
                    plainType = Int::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { residenceCity.id }
                ) { residenceCity = cityRep.get(it!!)!! },
                EntityMapping.Field(
                    columnName = "residence_address",
                    plainType = String::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { residenceAddress }
                ) { residenceAddress = it!! },
                EntityMapping.Field(
                    columnName = "home_phone_number",
                    plainType = String::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { homePhoneNumber }
                ) { homePhoneNumber = it },
                EntityMapping.Field(
                    columnName = "mobile_phone_number",
                    plainType = String::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { mobilePhoneNumber }
                ) { mobilePhoneNumber = it },
                EntityMapping.Field(
                    columnName = "email",
                    plainType = String::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { email }
                ) { email = it },
                EntityMapping.Field(
                    columnName = "marital_status",
                    plainType = Int::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { maritalStatus.id }
                ) { maritalStatus = maritalStatusRep.get(it!!)!! },
                EntityMapping.Field(
                    columnName = "citizenship",
                    plainType = String::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { citizenship.key }
                ) { citizenship = countryRep.get(it!!)!! },
                EntityMapping.Field(
                    columnName = "disability",
                    plainType = Int::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { disability.id }
                ) { disability = disabilityRep.get(it!!)!! },
                EntityMapping.Field(
                    columnName = "pensioner",
                    plainType = Boolean::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { pensioner }
                ) { pensioner = it!! },
                EntityMapping.Field(
                    columnName = "month_income",
                    plainType = Int::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { monthIncome }
                ) { monthIncome = it ?: -1 },
                EntityMapping.Field(
                    columnName = "conscript",
                    plainType = Boolean::class.java,
                    isId = false,
                    isAutogenerated = false,
                    getter = { conscript }
                ) { conscript = it!! },
            )
        }
    )
) {

    fun getByPassport(series: String, number: String): Client? {
        return getOneBy(
            listOf(
                entityMapping.getField("passport_series") to series,
                entityMapping.getField("passport_number") to number,
            )
        )
    }
}