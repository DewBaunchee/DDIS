package by.varyvoda.bankapp.domain.repository.impl

import by.varyvoda.bankapp.domain.dependency.DependencyProvider
import by.varyvoda.bankapp.domain.model.Deposit
import by.varyvoda.bankapp.domain.repository.AbstractRepository
import by.varyvoda.bankapp.domain.repository.mapping.EntityMapping
import java.time.LocalDate

class DepositRepository : AbstractRepository<Int, Deposit>(
    DependencyProvider.get().let { provider ->
        val depositProgramRepository = provider.provide(DepositProgramRepository::class.java)
        val currencyRepository = provider.provide(CurrencyRepository::class.java)
        val clientRepository = provider.provide(ClientRepository::class.java)
        return@let EntityMapping(
            "deposit",
            { Deposit() },
            listOf(
                EntityMapping.Field(
                    columnName = "id", plainType = Int::class.java,
                    isId = true, isAutogenerated = false,
                    getter = { id }
                ) { id = it!! },
                EntityMapping.Field(
                    columnName = "type", plainType = Int::class.java,
                    isId = false, isAutogenerated = false,
                    getter = { program.id }
                ) { program = depositProgramRepository.get(it!!) },
                EntityMapping.Field(
                    columnName = "begin", plainType = LocalDate::class.java,
                    isId = false, isAutogenerated = false,
                    getter = { begin }
                ) { begin = it!! },
                EntityMapping.Field(
                    columnName = "\"end\"", plainType = LocalDate::class.java,
                    isId = false, isAutogenerated = false,
                    getter = { end }
                ) { end = it!! },
                EntityMapping.Field(
                    columnName = "amount", plainType = Int::class.java,
                    isId = false, isAutogenerated = false,
                    getter = { amount }
                ) { amount = it!! },
                EntityMapping.Field(
                    columnName = "currency", plainType = String::class.java,
                    isId = false, isAutogenerated = false,
                    getter = { currency.key }
                ) { currency = currencyRepository.get(it!!) },
                EntityMapping.Field(
                    columnName = "client", plainType = String::class.java,
                    isId = false, isAutogenerated = false,
                    getter = { client.id }
                ) { client = clientRepository.get(it!!) },
            )
        )
    }
)